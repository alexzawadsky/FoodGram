version: '3.3'
services:

  db:
    image: postgres:13.0-alpine
    volumes:
      - /var/lib/postgresql/data/
    env_file:
      - ./.env

  backend:
    build: ../backend
    restart: always
    volumes:
      - data_value:/app/data/
      - static_value:/app/static/
      - media_value:/app/media/
    depends_on:
      - db
    env_file:
      - ./.env
  
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    volumes:
      - ../frontend/:/app/result_build/
  
  nginx:
    image: nginx:1.19.3
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/redoc.html:/usr/share/nginx/html/api/docs/redoc.html
      - ../docs/openapi-schema.yml:/usr/share/nginx/html/api/docs/openapi-schema.yml
      - static_value:/var/html/static/
      - media_value:/var/html/media/
    depends_on:
      - backend
      - frontend

volumes:
  static_value:
  media_value:
  data_value:
  postgres_data:



# version: '3.3'

# services:

#   frontend:
#     build:
#       context: ../frontend
#       dockerfile: Dockerfile
#     volumes:
#       - ../frontend/:/app/result_build/

#   db:
#     image: postgres:13.0-alpine
#     volumes:
#       - /var/lib/postgresql/data/
#     env_file:
#       - ./.env

#   web:
#     build: ../backend/foodgram/
#     restart: always
#     volumes:
#       - static_value:/app/static/
#       - media_value:/app/media/
#     depends_on:
#       - db
#     env_file:
#       - ./.env

#   nginx:
#     image: nginx:1.19.3
#     ports:
#       - "80:80"
#     volumes:
#       - ./nginx.conf:/etc/nginx/conf.d/default.conf
#       - ../frontend/build:/usr/share/nginx/html/
#       - ../docs/:/usr/share/nginx/html/api/docs/
#     depends_on:
#       - web

# volumes:
#   media_value:
#   static_value: